FUs.LUTDelay = 0.3 / PERIOD
FUs.MaxLutSize = 4
FUs.BRam.Latency = 1.0 / PERIOD -- Block RAM

FUs.AddSub = { Latencies = { 0 , 2.156 / PERIOD , 2.606 / PERIOD , 3.650 / PERIOD , 5.503 / PERIOD }, --Add
	             Costs = {2 * 64, 10 * 64, 18 * 64, 34 * 64, 66 * 64}, --Add
               StartInterval=1}
FUs.Shift = { Latencies = { 0 , 2.558 / PERIOD , 2.920 / PERIOD , 4.031 / PERIOD , 5.109 / PERIOD }, --Shift
              Costs = {1 * 64, 27 * 64, 70 * 64, 171 * 64, 393 * 64}, --Shift
              StartInterval=1} --Shift
FUs.Mult = { Latencies = { 0 , 4.142 / PERIOD , 4.627 / PERIOD , 7.846 / PERIOD , 10.383 / PERIOD }, --Mult
	           Costs = {1 * 64, 103 * 64, 344 * 64, 1211 * 64, 4478 * 64}, --Mul
             StartInterval=1} --Mul 
FUs.ICmp   = { Latencies = { 0 , 1.976 / PERIOD , 2.667 / PERIOD , 3.609 / PERIOD , 5.459 / PERIOD }, --ICmp
               Costs = {1 * 64, 8 * 64, 16 * 64, 32 * 64, 64 * 64}, --Cmp
               StartInterval=1 } --Cmp 

FUs.Mux    = { MaxAllowedMuxSize = 16,
               Latencies = { 1.151 / PERIOD, --2-input 
                      1.935 / PERIOD, --3-input 
                      2.259 / PERIOD, --4-input 
                      2.395 / PERIOD, --5-input 
                      2.357 / PERIOD, --6-input 
                      2.357 / PERIOD, --7-input 
                      3.028 / PERIOD, --8-input 
                      3.028 / PERIOD, --9-input 
                      3.193 / PERIOD, --10-input 
                      3.193 / PERIOD, --11-input 
                      3.883 / PERIOD, --12-input 
                      3.841 / PERIOD, --13-input 
                      3.880 / PERIOD, --14-input 
                      3.900 / PERIOD, --15-input 
                      4.595 / PERIOD, --16-input 
                      4.294 / PERIOD, --17-input 
                      4.291 / PERIOD, --18-input 
                      4.379 / PERIOD, --19-input 
                      5.123 / PERIOD, --20-input 
                      5.333 / PERIOD, --21-input 
                      5.387 / PERIOD, --22-input 
                      5.207 / PERIOD, --23-input 
                      5.715 / PERIOD, --24-input 
                      5.263 / PERIOD, --25-input 
                      5.581 / PERIOD, --26-input 
                      6.133 / PERIOD, --27-input 
                      5.497 / PERIOD, --28-input 
                      5.783 / PERIOD, --29-input 
                      6.314 / PERIOD, --30-input 
                      6.204 / PERIOD, --31-input 
                      6.322 / PERIOD  --32-input
                    },
              Costs = { 1 * 64, 1 * 64, 2 * 64, 2 * 64, 3 * 64, 3 * 64, 4 * 64, 4 * 64, 5 * 64, 5 * 64, 6 * 64, 6 * 64, 7 * 64, 7 * 64, 8 * 64, 8 * 64, 9 * 64, 9 * 64, 10 * 64, 10 * 64, 11 * 64, 11 * 64, 12 * 64, 12 * 64, 13 * 64, 13 * 64, 14 * 64, 14 * 64, 15 * 64, 15 * 64, 16 * 64, 16 * 64, 17 * 64, 17 * 64, 18 * 64, 18 * 64, 19 * 64, 19 * 64, 20 * 64, 20 * 64, 21 * 64, 21 * 64, 22 * 64, 22 * 64, 23 * 64, 23 * 64, 24 * 64, 24 * 64, 25 * 64, 25 * 64, 26 * 64, 26 * 64, 27 * 64, 27 * 64, 28 * 64, 28 * 64, 29 * 64, 29 * 64, 30 * 64, 30 * 64, 31 * 64, 31 * 64, 32 * 64, 32 * 64, 33 * 64, 33 * 64, 34 * 64, 34 * 64, 35 * 64, 35 * 64, 36 * 64, 36 * 64, 37 * 64, 37 * 64, 38 * 64, 38 * 64, 39 * 64, 39 * 64, 40 * 64, 40 * 64, 41 * 64, 41 * 64, 42 * 64, 42 * 64, 43 * 64, 43 * 64, 44 * 64, 44 * 64, 45 * 64, 45 * 64, 46 * 64, 46 * 64, 47 * 64, 47 * 64, 48 * 64, 48 * 64, 49 * 64, 49 * 64, 50 * 64, 50 * 64, 51 * 64, 51 * 64, 52 * 64, 52 * 64, 53 * 64, 53 * 64, 54 * 64, 54 * 64, 55 * 64, 55 * 64, 56 * 64, 56 * 64, 57 * 64, 57 * 64, 58 * 64, 58 * 64, 59 * 64, 59 * 64, 60 * 64, 60 * 64, 61 * 64, 61 * 64, 62 * 64, 62 * 64, 63 * 64, 63 * 64, 64 * 64, 64 * 64, 65 * 64, 65 * 64, 66 * 64, 66 * 64, 67 * 64, 67 * 64, 68 * 64, 68 * 64, 69 * 64, 69 * 64, 70 * 64, 70 * 64, 71 * 64, 71 * 64, 72 * 64, 72 * 64, 73 * 64, 73 * 64, 74 * 64, 74 * 64, 75 * 64, 75 * 64, 76 * 64, 76 * 64, 77 * 64, 77 * 64, 78 * 64, 78 * 64, 79 * 64, 79 * 64, 80 * 64, 80 * 64, 81 * 64, 81 * 64, 82 * 64, 82 * 64, 83 * 64, 83 * 64, 84 * 64, 84 * 64, 85 * 64, 85 * 64, 86 * 64, 86 * 64, 87 * 64, 87 * 64, 88 * 64, 88 * 64, 89 * 64, 89 * 64, 90 * 64, 90 * 64, 91 * 64, 91 * 64, 92 * 64, 92 * 64, 93 * 64, 93 * 64, 94 * 64, 94 * 64, 95 * 64, 95 * 64, 96 * 64, 96 * 64, 97 * 64, 97 * 64, 98 * 64, 98 * 64, 99 * 64, 99 * 64, 100 * 64, 100 * 64, 101 * 64, 101 * 64, 102 * 64, 102 * 64, 103 * 64, 103 * 64, 104 * 64, 104 * 64, 105 * 64, 105 * 64, 106 * 64, 106 * 64, 107 * 64, 107 * 64, 108 * 64, 108 * 64, 109 * 64, 109 * 64, 110 * 64, 110 * 64, 111 * 64, 111 * 64, 112 * 64, 112 * 64, 113 * 64, 113 * 64, 114 * 64, 114 * 64, 115 * 64, 115 * 64, 116 * 64, 116 * 64, 117 * 64, 117 * 64, 118 * 64, 118 * 64, 119 * 64, 119 * 64, 120 * 64, 120 * 64, 121 * 64, 121 * 64, 122 * 64, 122 * 64, 123 * 64, 123 * 64, 124 * 64, 124 * 64, 125 * 64, 125 * 64, 126 * 64, 126 * 64, 127 * 64, 127 * 64, 128 * 64, 128 * 64, 129 * 64, 129 * 64, 130 * 64, 130 * 64, 131 * 64, 131 * 64, 132 * 64, 132 * 64, 133 * 64, 133 * 64, 134 * 64, 134 * 64, 135 * 64, 135 * 64, 136 * 64, 136 * 64, 137 * 64, 137 * 64, 138 * 64, 138 * 64, 139 * 64, 139 * 64, 140 * 64, 140 * 64, 141 * 64, 141 * 64, 142 * 64, 142 * 64, 143 * 64, 143 * 64, 144 * 64, 144 * 64, 145 * 64, 145 * 64, 146 * 64, 146 * 64, 147 * 64, 147 * 64, 148 * 64, 148 * 64, 149 * 64, 149 * 64, 150 * 64, 150 * 64, 151 * 64, 151 * 64, 152 * 64, 152 * 64, 153 * 64, 153 * 64, 154 * 64, 154 * 64, 155 * 64, 155 * 64, 156 * 64, 156 * 64, 157 * 64, 157 * 64, 158 * 64, 158 * 64, 159 * 64, 159 * 64, 160 * 64, 160 * 64, 161 * 64, 161 * 64, 162 * 64, 162 * 64, 163 * 64, 163 * 64, 164 * 64, 164 * 64, 165 * 64, 165 * 64, 166 * 64, 166 * 64, 167 * 64, 167 * 64, 168 * 64, 168 * 64, 169 * 64, 169 * 64, 170 * 64, 170 * 64, 171 * 64, 171 * 64, 172 * 64, 172 * 64, 173 * 64, 173 * 64, 174 * 64, 174 * 64, 175 * 64, 175 * 64, 176 * 64, 176 * 64, 177 * 64, 177 * 64, 178 * 64, 178 * 64, 179 * 64, 179 * 64, 180 * 64, 180 * 64, 181 * 64, 181 * 64, 182 * 64, 182 * 64, 183 * 64, 183 * 64, 184 * 64, 184 * 64, 185 * 64, 185 * 64, 186 * 64, 186 * 64, 187 * 64, 187 * 64, 188 * 64, 188 * 64, 189 * 64, 189 * 64, 190 * 64, 190 * 64, 191 * 64, 191 * 64, 192 * 64, 192 * 64, 193 * 64, 193 * 64, 194 * 64, 194 * 64, 195 * 64, 195 * 64, 196 * 64, 196 * 64, 197 * 64, 197 * 64, 198 * 64, 198 * 64, 199 * 64, 199 * 64, 200 * 64, 200 * 64, 201 * 64, 201 * 64, 202 * 64, 202 * 64, 203 * 64, 203 * 64, 204 * 64, 204 * 64, 205 * 64, 205 * 64, 206 * 64, 206 * 64, 207 * 64, 207 * 64, 208 * 64, 208 * 64, 209 * 64, 209 * 64, 210 * 64, 210 * 64, 211 * 64, 211 * 64, 212 * 64, 212 * 64, 213 * 64, 213 * 64, 214 * 64, 214 * 64, 215 * 64, 215 * 64, 216 * 64, 216 * 64, 217 * 64, 217 * 64, 218 * 64, 218 * 64, 219 * 64, 219 * 64, 220 * 64, 220 * 64, 221 * 64, 221 * 64, 222 * 64, 222 * 64, 223 * 64, 223 * 64, 224 * 64, 224 * 64, 225 * 64, 225 * 64, 226 * 64, 226 * 64, 227 * 64, 227 * 64, 228 * 64, 228 * 64, 229 * 64, 229 * 64, 230 * 64, 230 * 64, 231 * 64, 231 * 64, 232 * 64, 232 * 64, 233 * 64, 233 * 64, 234 * 64, 234 * 64, 235 * 64, 235 * 64, 236 * 64, 236 * 64, 237 * 64, 237 * 64, 238 * 64, 238 * 64, 239 * 64, 239 * 64, 240 * 64, 240 * 64, 241 * 64, 241 * 64, 242 * 64, 242 * 64, 243 * 64, 243 * 64, 244 * 64, 244 * 64, 245 * 64, 245 * 64, 246 * 64, 246 * 64, 247 * 64, 247 * 64, 248 * 64, 248 * 64, 249 * 64, 249 * 64, 250 * 64, 250 * 64, 251 * 64, 251 * 64, 252 * 64, 252 * 64, 253 * 64, 253 * 64, 254 * 64, 254 * 64, 255 * 64, 255 * 64, 256 * 64 },
              StartInterval=1 }
