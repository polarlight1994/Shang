# Load necessary package.
load_package flow
load_package report
#load_package ::quartus::sta

project_new DUT_TOP -overwrite

# Target: DE2-70 Board
set_global_assignment -name FAMILY "Cyclone IV E"
set_global_assignment -name DEVICE EP4CE75F29C6

# Build project and specify some confige
# =====================
set_global_assignment -name TOP_LEVEL_ENTITY DUT_TOP
set_global_assignment -name SOURCE_FILE @MAIN_RTL_SRC@
set_global_assignment -name SOURCE_FILE @MAIN_INT_TOP@
set_global_assignment -name SOURCE_FILE @MAIN_INT_BRAM@
set_global_assignment -name SOURCE_FILE @MAIN_INT_BRAMINIT@
set_global_assignment -name SDC_FILE @MAIN_SDC_SRC@
set_global_assignment -name VERILOG_MACRO "quartus_synthesis"

#set_location_assignment PIN_T29 -to rstN
#set_location_assignment PIN_T28 -to start
#set_location_assignment PIN_W27 -to LED7[0]
#set_location_assignment PIN_W25 -to LED7[1]
#set_location_assignment PIN_W23 -to LED7[2]
#set_location_assignment PIN_Y27 -to LED7[3]
#set_location_assignment PIN_Y24 -to LED7[4]
#set_location_assignment PIN_Y23 -to LED7[5]
#set_location_assignment PIN_AA27 -to LED7[6]
#set_location_assignment PIN_AA24 -to LED7[7]
#set_location_assignment PIN_D16 -to clk

set_global_assignment -name RESERVE_ALL_UNUSED_PINS "AS INPUT TRI-STATED"
set_global_assignment -name RESERVE_ASDO_AFTER_CONFIGURATION "AS OUTPUT DRIVING AN UNSPECIFIED SIGNAL"
set_global_assignment -name STRATIX_DEVICE_IO_STANDARD LVTTL
set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 1

set_global_assignment -name RESERVE_ALL_UNUSED_PINS_NO_OUTPUT_GND "AS INPUT TRI-STATED"
set_global_assignment -name LL_ROOT_REGION ON -section_id "Root Region"
set_global_assignment -name LL_MEMBER_STATE LOCKED -section_id "Root Region"
#############################################################################
#Power estimation settings
set_global_assignment -name EDA_SIMULATION_TOOL "ModelSim-Altera (Verilog)"
set_global_assignment -name EDA_OUTPUT_DATA_FORMAT "VERILOG HDL" -section_id eda_simulation
set_global_assignment -name EDA_TEST_BENCH_DESIGN_INSTANCE_NAME DUT_TOP_tb -section_id eda_simulation
set_global_assignment -name EDA_WRITE_NODES_FOR_POWER_ESTIMATION ALL_NODES -section_id eda_simulation
set_global_assignment -name EDA_MAP_ILLEGAL_CHARACTERS ON -section_id eda_simulation
set_global_assignment -name EDA_TIME_SCALE "1 ps" -section_id eda_simulation
set_global_assignment -name EDA_ENABLE_GLITCH_FILTERING ON -section_id eda_simulation

#############################################################################
set ENABLE_PHYSICAL_SYNTHESIS "@ENABLE_PHYSICAL_SYNTHESIS@"

source @VTS_SOURCE_ROOT@/quartus_compile.tcl
#############################################################################
execute_module -tool sta -args {--report_script @VTS_SOURCE_ROOT@/extract_timing.tcl}

#############################################################################
#Write the netlist
execute_module -tool eda

#############################################################################
#Process the result.
load_report
#Report failing paths.
#qsta_utility::generate_top_failures_per_clock 10 

# Summary
set DataJSON [open "@BenchmarkSummaryTmp@" a+]

puts $DataJSON ",\n\{\"name\":\"@MAIN_RTL_ENTITY@\","

set FMAX [get_report_panel_data -name {*Fmax*} -col 0 -row 1]
puts $DataJSON "\"restricted_fmax\":\"$FMAX\","
#############################################################################
set MAIN_RTL_ENTITY "@MAIN_RTL_ENTITY@"
set BenchmarkReportTmp "@BenchmarkReportTmp@"

source @VTS_SOURCE_ROOT@/report_json_data.tcl
#############################################################################
unload_report

#Perform functional simulation.
exec timeout @TIMEOUTS@s bash @MAIN_MODELDO_FILE@ >@ stderr

#Read the execution cycles
set cycleFile [open "@MAIN_RTL_ENTITY@.txt" r]
#while { [gets $cycleFile line] >= 0 } {
gets $cycleFile line
regexp {@MAIN_RTL_ENTITY@ hardware run cycles ([0-9]+)} $line match total_cycles
set total_cycles
puts $DataJSON "\"cycles\":\"$total_cycles\""
#}
close $cycleFile

if {0} {
  #Simulate the netlist with the reported FMAX.
  regexp {([0-9.]+)} "$FMAX" match FMAX_NUM
  set FMAX_NUM
  set half_period_ns [expr "ceil(500 / $FMAX_NUM) + 0.001"]
  exec bash -c "sed -i -e 's/<half-period>/$half_period_ns/' DUT_TOP_tb.sv"
  #Set the simulation time according to the functional simulation.
  set run_time [expr "2 * $half_period_ns * $total_cycles + 100"]
  exec bash -c "sed -i -e 's/<run-time>/$run_time/' @MAIN_MODELDO_FILE@_post_routed"

  #Simulate the design to get the vcd.
  #TODO Check the result.
  exec bash @MAIN_MODELDO_FILE@_post_routed >@ stderr

  # Estimate power base on the vcd.
  execute_module -tool pow -args {--input_vcd=simulation/modelsim/DUT_TOP.vcd --use_vectorless_estimation=on --vcd_filter_glitches=on}

  # Read the power result.
  set powerFile [open "@TEST_BINARY_ROOT@/DUT_TOP.pow.summary" r]
  # Scan the entire power summary to get the total thermal power dissipation.
  while { [gets $powerFile line] >= 0 } {
    if {[regexp {Total Thermal Power Dissipation : ([0-9.]+)} $line match total_pow]} {
      set total_pow
      puts $DataJSON ",\"power_mw\":\"$total_pow\""
    }

    if {[regexp {Core Dynamic Thermal Power Dissipation : ([0-9.]+)} $line match total_pow]} {
      set total_pow
      puts $DataJSON ",\"power_mw\":\"$total_pow\""
    }

    if {[regexp {Core Static Thermal Power Dissipation : ([0-9.]+)} $line match total_pow]} {
      set total_pow
      puts $DataJSON ",\"power_mw\":\"$total_pow\""
    }

    if {[regexp {I/O Thermal Power Dissipation : ([0-9.]+)} $line match total_pow]} {
      set total_pow
      puts $DataJSON ",\"power_mw\":\"$total_pow\""
    }
  }
}

puts $DataJSON "\}"
close $DataJSON

project_close
